Git Commands:
* clone
* branch
* checkout 
* add
* status 
* commit 
* push 
* pull 
* diff
* log 

Pointers:
* Content in Square brackets represents optional params
* pull and push commands communicate with the Git server. Rest all will work in the local itself


Commands:
 Clone:
    * Syntax: 
        git clone <https-url-of-the-repository> [<path of the dir along with the name where you wanted to clone>]
            - requires un and passwd creds
        git clone <ssh-url-of-the-repository> [<path of the dir along with the name where you wanted to clone>]
            - Requires you to put public ssh key in the repository 

 branch:
    * git branch - tells you which branch you're currently in 

 Checkout:
    * switch branches from one to another
        git checkout <target-branch> 
    * Creates new branch from the current branch
        git checkout -b <name-of-the-new-branch>

 add: 
    * Adds the file(s) to staging
    * To add all the files
        git add .
    * To add a specific file 
        git add <path of the file present in the repo>
 
 status:
    * Tells the user what are the changes that are present in staging and also which are not in staging
        git status

 Commit:
    * Adds a message to the changes you're going to commit
        git commit -m "<meaningful message about your changes>" 
 
 push:
    * git push 

 pull:
    * git pull

 diff:
    * If you want to see the changes you've done before "staging/git add", use this
        git diff
    * If you want to see the changes you've done after "staging/git add", use this
        git diff --cached/staged

 log:
    * Look at all the logs in the cloned repository
        git log
    * Limit the n.of latest logs in the cloned repository
        git log -n <n.of latest commits you want to see>
    * See the logs in oneline (in non descriptive manner)
        git log --oneline 